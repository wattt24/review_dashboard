from database.all_database import get_all_reviews, get_reviews_by_period
import pandas as pd
import streamlit as st
import plotly.express as px
from datetime import datetime

# üß≠ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
st.set_page_config(
    page_title="Review Insight Dashboard",
    page_icon="üìä",
    layout="wide"
)

# üé® CSS ‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏ö‡∏≤‡πÜ ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡∏à‡∏£‡∏¥‡∏á
st.markdown("""
<style>
    .main {
        background-color: #f8f9fa;
        font-family: 'Segoe UI', sans-serif;
    }
    h1, h2, h3 {
        color: #1e3a8a;
    }
    .stMetric {
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0px 1px 3px rgba(0,0,0,0.1);
        padding: 10px;
    }
</style>
""", unsafe_allow_html=True)

# üè∑Ô∏è ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß
st.title("üìä Review Insight Dashboard")
st.markdown("‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏° ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤")
st.divider()

# üîΩ ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
with st.container():
    col1, col2, col3 = st.columns([1,1,1])

    with col1:
        period_option = st.selectbox(
            "üïí ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤",
            ("‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", "1 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", "3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", "1 ‡∏õ‡∏µ")
        )

    with col2:
        platform_option = st.selectbox(
            "üåê ‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°",
            ("‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", "fujikathailand", "FACEBOOK", "SHOPEE", "LAZADA" , "LINE")
        )

    with col3:
        show_chart = st.toggle("üìà ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡∏™‡∏£‡∏∏‡∏õ", value=True)

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
months = None
if period_option == "1 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô":
    months = 1
elif period_option == "3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô":
    months = 3
elif period_option == "1 ‡∏õ‡∏µ":
    months = 12

# üì• ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
with st.spinner("‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏µ‡∏ß‡∏¥‡∏ß..."):
    if months:
        df = get_reviews_by_period(
            platform=None if platform_option == "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" else platform_option,
            months=months
        )
    else:
        df = get_all_reviews(
            platform=None if platform_option == "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" else platform_option
        )

# üìä ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
if df is not None and not df.empty:
    total_reviews = len(df)
    st.success(f"‚úÖ ‡∏û‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {total_reviews:,} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

    # üß† ‡∏™‡∏£‡∏∏‡∏õ sentiment
    if "sentiment" in df.columns:
        col1, col2, col3 = st.columns(3)
        positive = len(df[df["sentiment"] == "positive"])
        negative = len(df[df["sentiment"] == "negative"])
        neutral = len(df[df["sentiment"] == "neutral"])

        col1.metric("üòä ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏ä‡∏¥‡∏á‡∏ö‡∏ß‡∏Å", f"{positive:,}")
        col2.metric("üòê ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Å‡∏•‡∏≤‡∏á‡πÜ", f"{neutral:,}")
        col3.metric("üò† ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏ö", f"{negative:,}")

    # üìà ‡∏Å‡∏£‡∏≤‡∏ü‡∏™‡∏£‡∏∏‡∏õ
    if show_chart and "review_date" in df.columns:
        st.divider()
        st.subheader("üìÖ ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤")

        try:
            df["review_date"] = pd.to_datetime(df["review_date"])
            df["month"] = df["review_date"].dt.to_period("M").astype(str)
            trend_df = df.groupby("month").size().reset_index(name="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß")

            fig = px.line(
                trend_df,
                x="month", y="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß",
                markers=True,
                title="‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
                color_discrete_sequence=["#1d4ed8"]
            )
            fig.update_layout(xaxis_title="‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", yaxis_title="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß")
            st.plotly_chart(fig, use_container_width=True)
        except Exception as e:
            st.warning(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÑ‡∏î‡πâ: {e}")

    # üßæ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    st.divider()
    st.subheader("üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
    st.dataframe(
        df[["platform", "shop_id", "review_text", "sentiment", "review_date"]],
        use_container_width=True, height=550
    )

else:
    st.warning("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
