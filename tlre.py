import requests
import time
import hashlib
import hmac
import urllib.parse
import json
import sys
import os
import datetime
os.environ["GOOGLE_SHEET_ID"] = "113NflRY6A8qDm5KmZ90bZSbQGWaNtFaDVK3qOPU8uqE"
from utils.token_manager import get_latest_token, save_token
# from utils.config import LAZADA_APP_ID, LAZADA_APP_SECRET
import requests
# ****************************‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
from lazop.base import LazopClient, LazopRequest
import json
# ====== ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î) ======
# ‡∏Ñ‡πà‡∏≤‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏ã‡∏∂‡πà‡∏á‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö
LALA=100200610
LAZADA_APP_ID = "135259"
LAZADA_APP_SECRET = "MXZ9vzVVw3TsGbal73a3PljVprysSRrN" 
# LAZADA_ACCESS_TOKEN = "50000300c32t6FEoxrr98dk0ejxhvvjcjCSesUzFflPL153b42e63GwXGwiEvSgU"
import json
import requests
import time
import hashlib
import hmac
import urllib.parse
import datetime
from lazop.base import LazopClient, LazopRequest
# # ‡∏ï‡∏±‡∏ß‡∏Å‡∏•‡∏≤‡∏á sdk ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Lazada API
# def call_lazada_api(endpoint, method="GET", params=None):
#     """
#     ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Lazada API ‡∏ú‡πà‡∏≤‡∏ô SDK
#     """
#     try:
#         client = LazopClient("https://api.lazada.co.th/rest", LAZADA_APP_ID, LAZADA_APP_SECRET)
#         request = LazopRequest(endpoint, method)

#         if params:
#             for k, v in params.items():
#                 request.add_api_param(k, str(v))

#         response = client.execute(request, LAZADA_ACCESS_TOKEN)

#         # ‚úÖ ‡∏ö‡∏≤‡∏á SDK ‡∏à‡∏∞‡∏Ñ‡∏∑‡∏ô dict, ‡∏ö‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏Ñ‡∏∑‡∏ô string
#         if isinstance(response.body, (str, bytes)):
#             data = json.loads(response.body)
#         else:
#             data = response.body

#         return data

#     except Exception as e:
#         print(f"‚ùå Error calling Lazada API: {str(e)}")
#         return {"error": str(e)}

def call_lazada_api(endpoint, method="GET", params=None, account_id=LALA):
    """
    ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Lazada API ‡∏ú‡πà‡∏≤‡∏ô SDK
    ‡∏î‡∏∂‡∏á access_token ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å Google Sheet
    """
    try:
        # ‡∏î‡∏∂‡∏á token ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å Google Sheet
        token_data = get_latest_token("lazada", account_id)
        if not token_data or not token_data.get("access_token"):
            raise ValueError("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Lazada access_token ‡πÉ‡∏ô Google Sheet")

        access_token = token_data["access_token"]

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á client Lazop
        client = LazopClient("https://api.lazada.co.th/rest", LAZADA_APP_ID, LAZADA_APP_SECRET)
        request = LazopRequest(endpoint, method)

        if params:
            for k, v in params.items():
                request.add_api_param(k, str(v))

        response = client.execute(request, access_token)

        # ‡∏ö‡∏≤‡∏á SDK ‡∏Ñ‡∏∑‡∏ô dict, ‡∏ö‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏Ñ‡∏∑‡∏ô string
        if isinstance(response.body, (str, bytes)):
            data = json.loads(response.body)
        else:
            data = response.body

        return data

    except Exception as e:
        print(f"‚ùå Error calling Lazada API: {str(e)}")
        return {"error": str(e)}

def lazada_refresh_access_token(account_id):
    """
    üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä Lazada Access Token ‡∏ú‡πà‡∏≤‡∏ô Lazop SDK ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheet
    """
    # ‡∏î‡∏∂‡∏á refresh_token ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å Google Sheet
    token_data = get_latest_token(platform="lazada", account_id=seller_id)
    if not token_data or not token_data.get("refresh_token"):
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö refresh_token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö account_id {account_id}")
        return None

    refresh_token = token_data["refresh_token"]

    print("\n================ Lazada API Debug Info ================")
    print(f"üîπ API Name: /auth/token/refresh")
    print(f"üîπ Refresh Token: {refresh_token}")
    print(f"üîπ Account ID: {seller_id}")
    print("=======================================================\n")

    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ú‡πà‡∏≤‡∏ô SDK ‡∏î‡πâ‡∏ß‡∏¢‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏•‡∏≤‡∏á
    response = call_lazada_api(
        endpoint="/auth/token/refresh",
        method="POST",
        params={"refresh_token": refresh_token}
    )

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    if not response:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• response ‡∏à‡∏≤‡∏Å Lazada SDK")
        return None

    data = response.get("data") or response  # ‡∏ö‡∏≤‡∏á SDK ‡∏´‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô "data"

    access_token = data.get("access_token")
    new_refresh = data.get("refresh_token")
    expires_in = data.get("expires_in")

    if access_token and new_refresh:
        
        seller_id = data.get("account")  # Lazada seller ID
        save_token(
            platform="lazada",
            account_id=seller_id,
            access_token=access_token,
            refresh_token=new_refresh,
            expires_in=expires_in
        )
        expire_time = datetime.datetime.now() + datetime.timedelta(seconds=expires_in)
        print(f"‚úÖ Lazada token refreshed successfully (expires at {expire_time})")
    else:
        print("‚ùå Failed to refresh Lazada access token:", response)

    return response
